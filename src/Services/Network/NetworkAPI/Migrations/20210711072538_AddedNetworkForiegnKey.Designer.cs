// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NetworkAPI.Repository;

namespace NetworkAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20210711072538_AddedNetworkForiegnKey")]
    partial class AddedNetworkForiegnKey
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("NetworkAPI.Models.Network", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Ip")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MacAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Networks");
                });

            modelBuilder.Entity("NetworkAPI.Models.NetworkDevice", b =>
                {
                    b.Property<Guid>("NetworkId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DeviceId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("NetworkId", "DeviceId");

                    b.ToTable("NetworkDevice");
                });

            modelBuilder.Entity("NetworkNetworkDevice", b =>
                {
                    b.Property<Guid>("NetworksId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("NetworksNetworkId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("NetworksDeviceId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("NetworksId", "NetworksNetworkId", "NetworksDeviceId");

                    b.HasIndex("NetworksNetworkId", "NetworksDeviceId");

                    b.ToTable("NetworkNetworkDevice");
                });

            modelBuilder.Entity("NetworkNetworkDevice", b =>
                {
                    b.HasOne("NetworkAPI.Models.Network", null)
                        .WithMany()
                        .HasForeignKey("NetworksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NetworkAPI.Models.NetworkDevice", null)
                        .WithMany()
                        .HasForeignKey("NetworksNetworkId", "NetworksDeviceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
